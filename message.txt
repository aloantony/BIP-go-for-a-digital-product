#This is an example on writing serial commands
#to the Lynxmotion SES-V2 smart servos.
#LSS PowerHub board and "Grove 4pin" cable is used on connecting RPi serial
#  RPi -- PowerHub
#  GPIO14 Tx --  servo Rx ( white RX )
#  GPIO15 Rx --  servo Tx ( yellow TX )
#  GPIO GND -- GND          ( black GND )
#  Do not connect the 3V3 power to the Lynxmotion servo Vin !!
#The Lynxmotion SES-V2 servo serial 115200, parity none, 8 bits, stop bits 1

#Serial port settings on the Raspberry Pi ( if not already done earlier on the RPi board):
#  Preferences, Raspberry Pi Configuration
#    Serial Port ON
#or on the command line:
#  sudo raspi-config
#   Interface Options
#    Serial port
#     "Would you like a login shell to be ..." NO
#      "Would you like the serial port hardware.." YES
#        Enter
#         Esc
#          sudo reboot
#
#Lynxmotion Smart Servo LSS Communication protocol: search for "Lynxmotion wiki" and
#open the Smart Servo (LSS), LSS Communication Protocol. 

from time import sleep
import serial

bus = serial.Serial(
    port = '/dev/ttyS0',  #The "/dev/ttyACM0" is reserved for Bluetooth on RPi3, Zero2W and later
    baudrate = 115200,
    parity = serial.PARITY_NONE,
    stopbits =serial.STOPBITS_ONE,
    bytesize = serial.EIGHTBITS,
    timeout = 1
)
servoNr = 0  # 0 for a Lynx Motion SES V2 servo taken form the delivey box.
counter = 0
step = 600  # 60.0 degrees
reply = "reply"  
angleDeg = 0

servoNr = input("Please, enter the servo number ( for example 5 or 05):")

print(f"Turning servo number {servoNr} to 0.0 degrees and then in ten steps\n")
while (counter < 10):
    bus.write((f'#{servoNr}D{(step*counter)}T1500\r').encode()) # Encoded to UTF-8
    counter +=1
    sleep(4)

bus.write((f'#{servoNr}QD\r').encode())
reply = bus.read(14)
for i in range (len(reply)):
    angleDeg += reply[i]
print("Echo of the query command + answer: "+repr(reply)+"\n")
print("The servo turned to angle "+repr(angleDeg)+" degrees.\n")

print("Smooth acceleration, high speed, full five turns")
bus.write((f'#{servoNr}AA10\r').encode())  # Accwel
bus.write((f'#{servoNr}AD10\r').encode())
bus.write((f'#{servoNr}MD18000\r').encode())
#Waiting for finishing the motion
sleep(12)
#back to original values for the acceleration
bus.write((f'#{servoNr}AA100\r').encode())
bus.write((f'#{servoNr}AD100\r').encode())
#back to absolute position 0.0 degrees in 3 seconds
bus.write((f'#{servoNr}D000T3000\r').encode())

print("Finished with the servo. Closing serial port.")
bus.close()
del bus